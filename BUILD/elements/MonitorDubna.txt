Мониторная Система Дубна

Revision: 0.95 on $Date: 2023/03/20 17:12:10 $ GMT $Author: popov $





1.0  Monitor Dubna


1.0.1 МОНИТОР Дубна


Данное описание основано на оригинальных текстах 1988 г. и содержит детали, не
отраженные в явном виде в книге Г.Л. Мазного "Программирование на БЭСМ-6 в
системе Дубна" датированной 1978 годом.  Предполагается, что содержание этой
книги известно, НО за ДЕСЯТЬ лет, с 1978 по 1988 год, система претерпела
изменения и которые могут не совпадать с изложением деталей в книге.


1.0.2 МОНИТОР 80


Реализация МОНИТОР 80 существенно отличается от Монитора Дубна. МОНИТОР 80
имеет другое распределение памяти в младших адресах, поэтому есть вероятность
логической несовместимость между этими двумя мониторами. Это, кстати, было
одной и претензий к МОНИТОР 80 в Дубне, например: программная совместимость с
резидентным разделом и принцип переключения режимов загрузки были нарушены,
что требовало пересборки всех ранее статически собранных празделов, и
переработки программ тесно завязанных на резидентныу функциональность. Как
результат, именно по этой причине от МОНИТОР 80 отказались, как основного
монитора в системе, но возможность переключаться в МОНИТОР 80 оставили для
совместимости с программами разработанных в ОС Диспак.

N.B.
   Если функциональные отличия этих мониторов известны, тогда специфика
   МОНИТОРА 80 будет помечена в тексте как "M80:"


1.1 History


1.1.1 CDC1604 FORTRAN


Многие элементы системы «Монитор Дубна» перекочевали или были заимствованы из
CDC-1604 как элемент поддержки инфраструктуры, необходимой для работы
компилятора ФОРТРАН, перенесенного с CDC-1604 на БЭСМ-6 в 1969 г.  На том этапе
состояние программного обеспечения БЭСМ-6 не обеспечивало необходимой
совместимости с организацией вычислительного процесса, который предоставлялся
монитором COOP на CDC-1604.  Принятие этого процесса было естественным
продолжением переноса компилятора FORTRAN, включая организацию пакетов задач,
стандартных форматов массивов и концепцию программных библиотек.

    Элементы Монитора Дубна инспирированные COOP CDC-1604:

    МОНИТОР и его резидентная часть
    структура пакета и формат управляющих карт
    возможность смешивать текстовые и двоичные элементы в пакетах задач
    стандатный массив, как элемент загрузки
    трансляция с языка в стандартный массив
    библиотекарь, временные и общие библиотеки стандартных программ
    идея OVERLAY, LOAD-AND-GO, статический и динамический загрузчики
    пакетный редактор текстовой информации
    системные программы для поддержки ввода-вывода в Фортране


1.1.2 NON Batch portable


Ранние версии Монитора Дубна не были настроены на пакетный и интерактивный ввод
задач, и не использовали широкий набор экстра-кодов, что делало эти версии
легко переносимыми между операционными системами, эти версии были адаптированы
в ОС Дискак.




1.1.3 Batch OS Dependent




Вариант Монитора от 1988 года, изобилует большим набором экстра-кодов, которые
специфичны для ОС Дубна, такие как: заказ ресурсов, заказ лент и файлов, заказ
специальных библиотек, интерактивный ввод-вывод на терминал, редактирование
текстовых строк, отладка программ и т.д. Наличие ето специфики сделало этот
вариант сильно зависимым от ОС Дубна иси слабо переносимым. Позже, когда в ОС
Дубна появились интерактивные возможности, ориентация Мониторной системы на
пакетную обработку оказала большие ограничения на на формат взаимодействия с
системой через терминал: формат заданий так и остался чисто пакетным.


1.2 Internal Structure


- Memory Footprint
- Mass storage

1.2.1 Memory Footprint

Память имеет следующую структуру:

76000 - 77777B   - страница обмена и страница динамического загрузчика
STACK - ДЫРА     - магазин
01000 - (53401B) - нерезидент до магазина (STACK)
00423 - 00777B   - монитор резидентный
00300 - 00422B   - резидентные данные монитора
00100 - 00277B   - S область
00000 - 00077B   - константы настройки Монитора


Все программы выполняются с 01000B или далее. Есть несколько способов вызвать
выполнение программы:

а. используя управляющую карту *CALL или *EXECUTE, которые обрабатывает STAR*
б. вызвать загрузчик и передать управление загруженной программе или разделу

Стандартно, для вызова пользовательской программы используется карта *EXECUTE,
по умолчанию, выполнение программы начинается с 01000B


1.2.1.1 The Resident


Резидент содержит следующие части:

  Резидентные настроечные и рабочие данные монитора
  Исполняемая часть резидента


1.2.1.1.1 The resident data


Резидентные данные не содержат символов(!), т.к. они формируются до загрузчика.
Все ссылки на эти переменные и константы реализуются по абсолютным адресам.


                   C
                   C-----  ПAPAMETPЫ HACTPOЙKИ MOHИTOPA
                   C
                    P0      :  , EQU ,423B    . НАЧАЛО
                    MAG*    :  , EQU ,53401B  . MAГAЗИH
                    SYSP    :  , EQU ,76000B  . OБM.ЛИCT
                   C
                    NS      :  , P/P ,(SYSP)16
                    P0*64   :  , P*P ,(P0-1)64
                    M/512   :  , P/P ,(MAG*)512
                   C
                   C.....  TPAДИЦИOHHЫЙ ИHИЦИATOP MOHИTOPA
                   C
 0000   16          NIL     :  , BSS ,16B     .
 0016               *16     :  , Z00 ,P0*64
  -                           2, Z00 ,MAG*-2
 0017               *17     :  ,     ,
  -                            , Z00 ,P0      . Свободный адрес для LD
 0020               *20     :  , SJ  ,        . sysexiт()
 0021   22                  :  , BSS ,22B     . 21B - 42B
 0043               *43     :  ,     ,
  -                            , Z00 ,SYSP    . Адрес обменного листа
 0044               *44     :  , Z00 ,M/512   . Адрес магазина / 512
  -                           8,     ,P0
 0045               *45     :  , 010 ,NS      . BOCCT.
  -                            , 020 ,4       . OБM.ЛИCTA
 0046               *46     :  ,     ,NS      . CПACEHИE
  -                            , 020 ,4       . OБM.ЛИCTA
 0047               *47     :  , 010 ,NS      . Чтение в обменный лист
  -                            , 021 ,        . KAT.TEMPO
 0050               *50     :  ,     ,NS      . Запись каталога
  -                            , 021 ,
 0051               *51     :  , UJ  ,2120B   . BXOД HД-70
 0052               *52     :  , OCT ,77270707.
 0053               *53     :  , OCT ,77270707.
 0054               *54     :  , LOG ,2104000 . KOHEЦ TEMPO
 0055    3                     , BSS ,3       . 53B - 57B
 0060               *60     :  , 014 ,NS      . Чтение в обменный лист
  -                            , 021 ,7       . KAT.PERM.
 0061               *61     :  , 014 ,NS      . MECTO
  -                            , 021 ,        . ЗAГPУЗЧИKA
 0062   10                     , BSS ,8       . 62B - 71B
 0072               *72     :  , OCT ,77270707
 0073               *73     :  , LOG ,        . LIBRARY
 0074               *74     :  , LOG ,0014 0100 0021 0006
 0075               *75     :  , OCT ,7727 0707.
 0076               *76     :  , *67 ,106B
 0077               *77     :  , SJ  ,
                   C============  KOHEЦ ===============


1.2.1.1.2 The Resident executables


Резидент монитора уже имеет символы, так как он формируется загрузчиком,
Монитор от 1988 г. для МС Дубна в ОС Дубна.

Список символов:

МОNIТОR*   00423
МОNСАRD/ С 00445
SАV/47   С 00463
/VЕRЕ/   С 00506
DАТА*    С 00513
SТАТIС*  С 00515
LНЕАР*   С 00516
А/I0     С 00517
А/МINUS  С 00520
СНЕСКFL* С 00521
FLАGS    С 00522
*RЕGIМ// С 00523
LОАDАNGО   00524
LОАDGО   Е 00564
LОАDСАLL Е 00566
МАIN*    С 00574
МОNСАRD* С 00575
ЕNТRУ*   С 00626
РUNСНFL* С 00700
LОАDLIS* С 00701
FLGЕХ*   С 00702
RFМRТFLG С 00703
FULISFL* С 00704
NОLISFL* С 00705
СFIRSТ*  С 00706
ТRNАМЕ*  С 00707
ЕRRОFLG* С 00710
RМ*      С 00711
INFLОАD* С 00716
WОRINF*  С 00722
КСОUNТ*  С 00723
ТАРЕLISТ С 00727
IОLISТ*  С 00760
АСС*     С 00765
АRRЕАD*  С 00766
СВОБОДНО   00770

M80:
   МОНИТОР 80 имеет другую карту памяти, поэтому есть вероятность логического
   несовместимость между этими двумя мониторами.


1.2.1.2 The Non-Resident


Нерезидентная область используется для системных утилит, компиляторов и
программ.


1.2.1.2.1 TRP


ТРП - это сокращение от Таблица Распределения Памяти. ТРП используется для
разрешения ссылок на ранее загруженные символы в динамической загрузке.


1.2.1.2.2 Executables


Первый нерезидентный раздел - /MONTRAN, он управляет последовательностью
трансляции программ:

     вызов компилятора
     запись скомпилированных программ во временную библиотеку
     перфорация скомпилированного стандартного

M80:
   МОНИТОР 80 не имеет данного раздела, вся перечисленная функциональность
   реализована в разделе STAR*, который тоже имеет свои отличия.

Список символов:

/МОNТRАN   01000
ТR*САLL  Е 01025
RМ/      С 01053
RЕАD*      01055
SТОР*      01103
ЕХIТ     Е 01104
МОNRЕАD*   01132
RЕАD*ЕRR Е 01212
СОSУТISО   01236
DRUМТАР*   01312
РRINТ8     01343
DАТАРR*    01524
DАТЕ*    Е 01525
РRЕРDАТ  Е 01552
СНКWОRD* С 01603
СВОБОДНО   01604


Второй нерезидентный уровень - STAR*, который обрабатывает все управляющие
карты и вызывает системные утилиты.

Список символов:

SТАR*      01614
SАV*47   С 02274
ЕХЕСUТ     02275
FULFILМЕ Е 02335
ВLЕХРRIN   02361
СВОБОДНО   02374


Одной из системных утилит является ТRNSLТОR, она запрашивает у ОС библиотеки
для компиляторов, которых нет в списке Common ОБСП.

M80:
   МОНИТОР 80 использует утилиту NEWCOMP* для этих целей.

Список символов:

ТRNSLТОR   02404
/ТRАNS/    02665
ОUТ*ОUТ  С 02720
САТLG    С 04000
FIСМЕМОR   10000
FULLМЕМО Е 10001
АLLМЕМОR Е 10002
РАRАМТ*    10112
ТАВSIМIS   10366
SIМFАIL*   10566
SТАRSТА  С 10675
*МОNСRD* С 10676
МISТ10*  С 10712
ХРАRАМТ* С 10715
ХРАRАМТ/ С 10721
СВОБОДНО   10725



1.2.1.3 Fixed Pages


The fixed pages are:

page 000 - The Monitor Resident
Page 037 - The Exchange Page


1.2.1.4 The STACK


Расположение стека (магазина) регулируется одной из следующих программ:
FULLMEMORY, FICMEMORY, ALLMEMORY
его можно установить в любом месте, но его нормальное расположение - 53401B

Нижняя часть стека, в его стандартных положениях, защищена unmapped страницей.


1.2.1.5 The HOLE


Между Магазином ин обменным листом находится память при обращении к которой
возникает прерывание по защите, но в режиме ALLMEMORY такая страница
отсутствует.


1.2.2 Utilities


TBD. Здесь будут описаны стандартные утилиты МС Дубна


1.2.2.1 Loaders


Dynamic loader
Static loader
Mixed load mode


1.2.2.1.1 Dynamic loader


Динамический загрузчик, располагается на 21 системном MБ в общей ОБСП, размер
загрузчика 1 и 1/4 страницы, для его вызова его необходимо прочитать на
обменный лист и передать управление в него, он может выполнять процедуры LOAD и
LOAD-AND-GO


1.2.2.1.2 Static loader


Статический загрузчик, располагается на 21 системном MБ в общей ОБСП, размер
загрузчика 1/4 страницы


1.2.2.1.3 Mixed load mode


Мониторная система поддерживает режим mixed load, когда динамические и
статические разделы могут быть смешаны, с.м. общие детали в книге Мазного, из
не описанного в книге, это возможность делать рассылки в верх и указывать
конкретные номера библиотек при поиске разделов.

Вызов mixed loader через

*CALL OVERLAY


1.2.2.2 Object module format


Структура "Стандартного Массива" в LIBRARY:
===========================================

                  1. Структура подпрограммы
      Тело подпрограммы:
                  2. Команды                - INSTR
                  3. Константы              - CONST
                  4. Группа BSS             - BSS
      Рассылка данных:
                  5. Данные                 - DATA
                  6. Указание o рассылке    - SET
      Таблица описаний:
                  7. Заголовок подпрограммы - HEAD
                  8. Обозначения            - DSC
                  9. Длинные идентификаторы - LONG/IDENT
                 10. Debug                  - DEBUG


Структура подпрограммы: - 3 слова
===================================


  0)
       4.......43........32........21........10.......0
       876543210987654321098765432109876543210987654321
       +-----------+-----------+-----------+----------+
       |  DEBUG    |           |  DSC      |  HEAD    |
       +-----------+-----------+-----------+----------+
      48          36          24          12          1


  1)
       4.......43........32........21........10.......0
       876543210987654321098765432109876543210987654321
       +--+--------------+--------------+-------------+
       |  | LONG/IDENT   |  DATA        |  SET        |
       +--+--------------+--------------+-------------+
         45             30             15             1


  2)
       4.......43........32........21........10.......0
       876543210987654321098765432109876543210987654321
       +--+--------------+--------------+-------------+
       |  |  CONST       |  BSS         |  TEXT       |
       +--+--------------+--------------+-------------+
         45             30             15             1


Структура debug:
=================

   1) Идентификатор в коде text

       4.......43........32........21........10.......0
       876543210987654321098765432109876543210987654321
       +----------------------------------------------+
       |                   TEXT                       |
       +----------------------------------------------+
      48                                              1


   2) DESCRIPTOR

       4.......43........32........21........10.......0
       876543210987654321098765432109876543210987654321
       +-----------------------+----------------------+
       |  DESCRIPTOR           |  DESCRIPTOR          |
       +-----------------------+----------------------+
      48                                              1

       4.......43........32........21........10.......0
       876543210987654321098765432109876543210987654321
       +-----------------------+--+-+------+----------+
       |  DESCRIPTOR              |D|     |R| ADDR    |
       +-----------------------+--+-+------+----------+
      48                      24   19     12          1

      21-19:  0 - EQU
              1 - Метка
              2 -
              3 - Подпрограмма
            4-7 - Массив
      11-1      - Адрес
     12Р=1  =>  - Ссылка на адрес в таблице описаний
        =0  =>  - Внутренняя метка

Структура таблицы  описаний:
=============================


   1) Идентификатор в коде text

       4.......43........32........21........10.......0
       876543210987654321098765432109876543210987654321
       +----------------------------------------------+
       |                   TEXT                       |
       +----------------------------------------------+
      48                                              1


   2) DESCRIPTOR

       4.......43........32........21........10.......0
       876543210987654321098765432109876543210987654321
       +-----------------------+----------------------+
       |  DESCRIPTOR           |  DESCRIPTOR          |
       +-----------------------+----------------------+
      48                                              1


       4.......43........32........21........10.......0
       876543210987654321098765432109876543210987654321
       +-----------------------+----+-+----+----------+
       |  DESCRIPTOR           | DFQ||Z|  |R| ADDR    |
       +-----------------------+----+-+----+----------+
      48                      24   1917   12          1


    1) Идентификатор в коде TEXT
    2) 21-19:    - DFQ
        17 =0    - + *
        17 =1    - /
       12Р=1 =>  - Ссылка на адрес в таблице описаний
       12Р=0 =>  - Внутренняя метка
        11-1     - Адрес



 DFQ (21-19):
=====================


       +-------+----------+-----------+
       | 21-19 |  тип     | -->inf/op |
       +-------+----------+-----------+
       |   0   | equ      | см. equ   |
       |   1   | метка    | метка     |
       |   2   | параметр | parameter |
       |   3   | подпрогр | name/call |
       |  4-7  | массив   | name      |
       +-------+----------+-----------+


Структура EQU (24-22):
======================
       +-------+---------------+-----------+
       | 24-22 |      тип      |  inf/op   |
       +=======+===============+===========+
       |   0   | + -           | name/dubl |
       |   1   | * /           | name/dubl |
       |   2   |               |           |
       |   3   |               |           |
       |   4   | 48-25,23-16=0 | истина    |
       |       |         .ne.0 | cm.equ1   |
       |   5   | weq           | name      |
       |   6   | equ1          | name      |
       |   7   |               |           |
       +-------+---------------+-----------+


для 2,3,7 обработка EQU такя же,  как и для 1


Значение в inf/op:
==================


       0 - Истина
       1 - Метка
       2 - Параметр
       3 - name
       4 - сall
       5 - dubl


Тип массива (21Р=1):
====================
       +------------------+--------------------+
       |      22,18       |    20-19           |
       +------------------+--------------------+
       | 0 - L (line)     |  0 - S (спец.)     |
       | 1 - P (page)     |  1 - P (собств.)   |
       | 2 - S (sector)   |  2 - U (несобств.) |
       | 3 -  not impl.   |  3 - C (общий)     |
       +------------------+--------------------+


1.2.2.3 Library tools


TBD


1.2.3 Mass storage


TBD

1.2.3.1 Concept of libraries


Library Formats
Library Catalog Structure
Temporary Library
Personal Library
Common Library (ОБСП)
Static Library Format


1.2.3.1.1 Library Formats


Если номер < 30B, это системная ОБСП, иначе, это мат-номер носителя на
которой с нулевой зоны помещена ОБСП пользователя.

Допустимы следующие форматы библиотек:

1. Традиционная реrsо - сформированная по вызову:

      *TO PERSO:...

2. Реrsо формата Сахарова Б.Б. - сформированная по вызову:

      *CALL TO PERSO:...

   каталог до восьми (8) зон, библиотека пишется сразу за каталогом.

3. Традиционная обсп - сформированная по вызову:

      *CALL NEWLIB...

4. Упакованная ОБСП - сформированная по вызову:

      *CALL CRELIB:...

   с длиной полного каталога до восьми (8) зон, состоящего из основного
   каталога, за которым вплотную пишется таблица ссылок (справка), а за ней
   вплотную список ссылок (или ссылки).В этом списке, вместо относительного
   адреса входа в основном каталоге, задается его порядковый номер, который в
   два раза меньше, что позволило уложиться в отведенные для ссылки 12
   разрядов. Библиотека пишется сразу за каталогом.


1.2.3.2 Library catalog

Структура Каталога в LIBRARY:
===========================

    0)    - характеристика библиотеки (tbd)
    1)    - 0000 0000 0000 0000B

    Для каждого элемента каталога с номером K, используется два слова:


   2+2*K)  48- 1  -  Имя программы (входа) в коде TEXT
   3+2*K)  48P.=1 => Признак физ. обмена
           46-42  -  Номер рекорда
           41-36  -  Номер носителя
           35-31  -  Номер тракта
           30-16  -  Длина загрузки
           15- 1  -  Относительный вход
  Для Входов:
           48-16  - 0B

  Конец:
   2+2*N) - 0000 0000 0000 0000B
   3+2*N) - 7777 7777 7777 7777B


1.2.3.3 Temporary Library


Временная библиотека находится на мат. МБ 21, она пополняется через работу
компиляторов (WRITLIB*) или считыванием ст. массивов из библиотек.


1.2.3.4 Personal Library


Персональная библиотека формируется из временной, с.м. форматы библиотек и
книгу Мазного.


1.2.3.5 Common ОБСП


Структура Common ОБСП, ее размер не более 100 зон (не более двух МБ)

   +0:0000-1777B  Динамический загрузчик
   +1:0000-0377B  Динамический загрузчик 2 (overlay)
   +1:0400-0677B  TPП MOHИTOPA
   +1:0700-0777B  Копия памяти 0-77B
   +1:1000-1377B  Резидент MOHИTOPA (400-777B)
   +1:1400-1777B  Статический загрузчик и каталог статических разделов
     ...
   +7:0000        Каталог динамической части
     ...
   +11:0000       динамическая часть
     ...
                  <разрыв>
     ...
                  статическая часть
   +77:0000-1777B Монитор Drop-in


1.2.3.5.1 Common Library Catalog

1.2.3.5.2 Common Dynamic


Состав библиотеки ОС спечифичен, приводить каталог здесь нет смысла.


1.2.3.5.3 Common Static


Минимальная системная статическая библиотека соответствует
данному описанию разделов:


    МОNIТОR*(INРUТСАL,FОRТRАN,АSЕМВLЕR,АLGОL,WRIТLIВ*,MТ*РUNСН)
    FОRТRАN(СВDРR,СОNТRОL,ЕNDРRО,GLINК)
    АLGОL(А/РRINТМ)


1.2.3.6 Static Library Format


Структура каталога
Структура записи на носителе


1.2.3.6.1  Структура каталога библиотеки: (на раздел - 2 слова)


          0-слово = имя раздела в коде TEXT
                   ( = 0 - конец каталога )
          1-слово = характеристика раздела,
                конец каталога есть характеристика = ′свободно′
      РР.15/01     - адрес по загрузке
      РР.30/16     - длина по загрузке
      РР.45/31     - номер 40B-ки на внешнем устройстве
      Р.46 = 1     - раздел мiхlоаd (с фратментом ТРП)
      Р.48 = 1     - раздел на МЛ, тогда
          РР.45/36 - номер зоны от каталога
          РР.35/31 - номер 40-ки по листу
      Р.48 = 0     - раздел на МБ
          Р.47=0   - физический МБ
          Р.47=1   - математический МБ
          РР.45/41 - номер МБ
          РР.40/36 - номер тракта
          РР.35/31 - номер 40B-ки по листу


1.2.3.6.2  Структура записи на носителе


Статические разделы записываются в сжатом виде, по принципу подобномы COSY
формату для теста. Пусть имеется N неповторяющихся слов и следом M
повторяющихся слов ( =0, либо ≠0 ), тогда эта группа сопровождается служебным
словом перед ней:


[B    РР.15/01 - N,
    РР.30/16 - M,
    Р.48=1   - следом за служ.словом расположен эталон повторения
    Р.48=0   - повторяются нули тогда непосредственно за служ.словом идет
               группа в N слов


    в случае мiхlоаd вслед за последней группой находится соответствующий
    данному разделу фрагмент ТРП со следующей структурой:

         , ТЕХТ,8НFRАG ТРП  .ПРИЗНАК ФР-ТА ТРП
         , LОG ,N 0АААА     .АДРЕС НАЧАЛА В ТРП
           <Фрагмент ТРП>
         , LОG ,            .ПР-К КОНЦА ФРАГМЕНТА


    в случае, если раздел "вырожденный" (т.е. только паспорт раздела),
    присутствует только признак конца (нулевое слово).



1.2.3.6.3  Формирование статических системных разделов

M80:
   Пример фрагмента задания:

    Создать пользовательский OVERLAY:

       *call overlay:670100
        main(CNVT,fl,bt)
       *END RECORD


    Создать системный OVERLAY:


       *call overlay*:670110
        monitor*(main)
        main(CNVT,fl,bt)
       *END RECORD

    Распечатать каталоги:

       *call ocatalog:670100
       *call ocatalog:670110

   Вызвать новый системный OVERLAY как транслятор:

       *trans-main,,670110
       read in 1
       read in 2

   Вызвать новый пользовательский OVERLAY как программу:

       *call execute:670100
       read in 3
       stop

   Листинг задания:

           *MAIN MAIN
           *CALL OVERLAY:670100
      MAIN(CNVT,FL,BT)
*END RECORD

        MAIN       01000        KONV1*   E 03321        IBCDCTR* E 04644
        **       C 01065        SWRITT     03415        IOXXLPWT   04744
...
        BCDBEG*    02777        COLPUNB* E 04637          CBOБOД   05565
        FT2*     E 03306        COLPUNE* E 04637

        CNVT       05575        I*ST*L   E 06054
        CARD       06027        I*MU*I   E 06055
        R*ST*I     06034          CBOБOД   06070
        I*DI*I     06044

        FL         05575
          CBOБOД   05600

        BT         05575
          CBOБOД   05610

           *CALL OVERLAY*:670110
      MONITOR*(MAIN)
      MAIN(CNVT,FL,BT)
*END RECORD

        MAIN       01770        IOSVFR   E 03304        COLPUNE* E 05233
        **       C 02055        SUBPERR* E 03316        IBCDCTR* E 05240
...
        FC*642   E 02770        IOXXPKWT   05174          CBOБOД   06025
        FC*002   E 02770        BCDPUN   E 05175
        IOEND*   E 02775        COLPUNC* E 05176
        FT*003   E 02775        COLPUNB* E 05233

        CNVT       06035        I*ST*L   E 06314
        CARD       06267        I*MU*I   E 06315
        R*ST*I     06274          CBOБOД   06330
        I*DI*I     06304

        FL         06035
          CBOБOД   06040

        BT         06035
          CBOБOД   06050

           *CALL OCATALOG:670100
 KATAЛOГ  OVERLAY
    /17.12.76/

        MONITOR*     20 0000 00   00000   00400
        MAIN         67 0001 00   04575   01000
        CNVT         67 0003 06   00303   05575
        FL           67 0003 11   00013   05575
        BT           67 0003 12   00023   05575

 =
        CBOБOДHO     67 0003 13


           *CALL OCATALOG:670110
 KATAЛOГ  OVERLAY
    /17.12.76/

        MONITOR*     20 0000 00   00000   00400
        MAIN         67 0001 00   04045   01770
        CNVT         67 0002 33   00303   06035
        FL           67 0002 36   00013   06035
        BT           67 0002 37   00023   06035

 =
        CBOБOДHO     67 0003 00


           *TRANS-MAIN,,670110
  READ IN 1
  READ IN 2
           *CALL EXECUTE:670100
                   MAIN        01000
                   CNVT        05575
                   FL          05575
                   BT          05575
  READ IN 3
                   CNVT        05575
                   FL          05575
                   BT          05575
  STOP
 КОНЕЦ ЗАДАЧИ


1.2.3.7 OS dependencies


Мониторная Система Дубна от 1988 года, тексты которой присутствуют, содержит
много экстакодов которые настроены на вариат Диспетчера ОС Дубна, вплоть до
чтения переменных из ИПЗ и информационного поля Диспетчера. Ниже перечислены
специфичные для ОС Дубна разделы Мониторной Системы:

   чтение и управление вводом задачи (INPUCALL)
   проверка карт заказа ресурсов (CHEKJOB)
   динамический заказ библиотек
   зависимость системных программ на запуск и перехват управления через Э67
   запрос текущего, коммерческого и счетного времени
   работа с буферизированным вводом и выводом
   заказ магнитных лент, фаилов и дисков

...
TBD

1.2.3.7.1 Заказ магнитных носителей


Э57 заказ магнитных лент, фаилов и дисков

   Э57 имеет режимы, эти  режимы в адресе:
   1. notfound (4-й р.) печать 'нет мл'
   2. busy     (5-й р.) печать 'занят мф'
   3. ready    (6-й р.) печать 'нeгoт.mф'
   4. write    (7-й р.) печать 'запись мф'
   5. read     (8-й р.) печать 'чтение мф'
   6. nodiag   (9-й р.) блокировка ТТ-диагностики
   7. byname  (10-й р.) поиск только по имени (без N бобины)
   8. assign  (11-й р.) поиск c захватом мл (мат.номер мл - в 13 рег.)
   9. release (12-й р.) отказ от cвоиx мл заданныx на сумматоре битовой шкалой:
                        48 р. - мл 30 для мат.задач

   На сумматоре имя ленты в TEXT, номер бобины в 2-10 коде
   специальный запрос: опрос состояния физического магнитофона на сумматоре
                          4-9 рр. - номер мф
					    10-48 рр. - единицы

   после выхода экстракода:

   14 рег. содержит номер последней зоны для специального файла или 777b для мл

   на сумматоре следующая информация:
   1-6 pp.: найден физический номер мл (0 если мл отсутствует)
     48 p.: контриль записи (0-yes, 1-no)
     47 p.: бит готовности  (0-yes, 1-no)
     46 p.: бит занятости   (0-free 1-busy)
     45 p.: признак именованной мл (1-им.мл, 0-нет) это только по спец.запросу


1.3 Monitor


1.3.1 Methods to assembly


Основной метод сборки Монитора состоит из следующих этапов:

   формирование инициатора Монитора (переменных настройки) в памяти
   загрузка MONITOR* резидента
   запись образа резидента монитора на носитель
   запись ТРП монитора на носитель
   формирование общей (common) библиотеки
   формирование статических разделов


1.3.1.1 Utilities


 NEW//MON
 COLLECT

1.4 Common Library


1.4.1 Methods to assembly


1.4.1.1 Utilities

 COLLECT
 COMTODRU


1.5 Static Library


1.5.1 Methods to assembly


1.5.1.1 Utilities

 COLLECT
 COMTODRU


1.6 Configuring the Monitor


1.6.1 Known parameters


1.6.2 Libraries


1.6.3 Extended compilers


Заказ языков программирования, настройка на трансляторы.


С помощью карты *TRANS осуществляется подключение дополнительных трансляторов к “системе.  Управляющая карта *TRАNS имеет вид:


      *TRANS <разделитель 1> <название транслятора> <разделитель 2> [<МЛ.УКАЗ>]

<разделитель 1> определяет порядок просмотр статических библиотек
                он может быть "-" <минус> или ":" <двоеточие>

       : <двоеточие> - сначала, нужный раздел <название транслятора> ищется в
                       основной статике, затем в дополнительной, затем в личной
                       статической библиотеке на <МЛ.УКАЗ>;
       - <минус>     - происходит поиск нужного раздела в порядке, обратном
                       предыдущему.

<разделитель 2> определяет тип личных библиотек, в которых находится транслятор
                он может быть "." <точка> или "," <запятая>

       , <запятая>   - статическая библиотека;
       . <точка>     - временная библиотека (динамическая).

в последнем случае <разделитель 1> это может быть любым из перечисленных.


Примеры :
===============

*TRANS:FORTRAN       - транслятор с названием раздела FORTRAN будет выбран и
                       основной статики.

*TRANS-FORTRAN       - тот же транслятор загрузится из дополнительной статики.

*TRANS-FORTRAN,67200 - транслятор из библиотеки, расположенной на носителе
                       заказанного под мат.номером 67 из 200-й зоны.

*TRANS:FORTRAN.      - транслятор выберется из временной библиотеки и загрузит
                       динамически.

M80:
  Формат *TRANS в МОНИТОР 80 отличается и выглядит так:

 *TRANS<разделитель 1><название транслятора>[“,” [“DIN”] ”,” <МЛ.УКАЗ>]

Интерпретация <разделитель 1> такая же, как и в МОНИТОР Дубна;
“DIN” устанавливает динамическую загрузку, для того чтобы транслятор загрузить
из временной библиотеки, необходимо установить режим temo, например:

       *TEMPO
       *TRANS:RUST



2.0  Developers and Contributors 1968 - 1989

Авторы и разработчики Мониторной Системы Дубна, этот список не полный, и он
отражает только основу МС Дубна и не включает имена остальных разработчиков
диспетчера Дубна, библиотек и прикладных программ, их имена можно найти в
библиографии книги Г.Л. Мазного.

Н.Н.говорун     благодаря ему все и было реализовано
В.Ю.Веретенов
А.И.Волков      КИАЭ
А.С.Голубев     КИАЭ
М.И.Гуревич     КИАЭ
Н.С.Заикин      *
О.Н.Ломидзе     *
Г.Л.Мазный      *
В.А.Петров      КИАЭ
М.Ю.Попов       *
В.А.Ростовцев
А.И.Салтыков
А.П.Сапожников  *
Б.Б.Сахаров     ФИАЭ
Г.Л.Семашко
И.Н.Силин
Е.Д.Федюнькин   *
А.А.Хошенко
М.Л.Шапиро      КИАЭ
В.П.Шириков

* - звездочкой отмечены обитали комнаты 225, ЛТФ, ОИЯИ (кто посещал ЛВТА в то
    время, тот знает что это было).

